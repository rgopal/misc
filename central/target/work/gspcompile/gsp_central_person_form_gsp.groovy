import com.oumuo.central.Person
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_central_person_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/person/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: personInstance, field: 'name', 'error'))
printHtmlPart(1)
invokeTag('message','g',7,['code':("person.name.label"),'default':("Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',10,['name':("name"),'maxlength':("64"),'required':(""),'value':(personInstance?.name)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'personRoles', 'error'))
printHtmlPart(4)
invokeTag('message','g',16,['code':("person.personRoles.label"),'default':("Person Roles")],-1)
printHtmlPart(5)
for( p in (personInstance?.personRoles) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(p?.encodeAsHTML())
})
invokeTag('link','g',22,['controller':("personRole"),'action':("show"),'id':(p.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'personRole.label', default: 'PersonRole')]))
})
invokeTag('link','g',25,['controller':("personRole"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'staffings', 'error'))
printHtmlPart(10)
invokeTag('message','g',34,['code':("person.staffings.label"),'default':("Staffings")],-1)
printHtmlPart(5)
for( s in (personInstance?.staffings) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(s?.encodeAsHTML())
})
invokeTag('link','g',40,['controller':("staffing"),'action':("show"),'id':(s.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'staffing.label', default: 'Staffing')]))
})
invokeTag('link','g',43,['controller':("staffing"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'accounts', 'error'))
printHtmlPart(11)
invokeTag('message','g',52,['code':("person.accounts.label"),'default':("Accounts")],-1)
printHtmlPart(5)
for( a in (personInstance?.accounts) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(a?.encodeAsHTML())
})
invokeTag('link','g',58,['controller':("account"),'action':("show"),'id':(a.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'account.label', default: 'Account')]))
})
invokeTag('link','g',61,['controller':("account"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'comments', 'error'))
printHtmlPart(12)
invokeTag('message','g',70,['code':("person.comments.label"),'default':("Comments")],-1)
printHtmlPart(5)
for( c in (personInstance?.comments) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(c?.encodeAsHTML())
})
invokeTag('link','g',76,['controller':("comment"),'action':("show"),'id':(c.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'comment.label', default: 'Comment')]))
})
invokeTag('link','g',79,['controller':("comment"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'programs', 'error'))
printHtmlPart(13)
invokeTag('message','g',88,['code':("person.programs.label"),'default':("Programs")],-1)
printHtmlPart(5)
for( p in (personInstance?.programs) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(p?.encodeAsHTML())
})
invokeTag('link','g',94,['controller':("program"),'action':("show"),'id':(p.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'program.label', default: 'Program')]))
})
invokeTag('link','g',97,['controller':("program"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'catalogs', 'error'))
printHtmlPart(14)
invokeTag('message','g',106,['code':("person.catalogs.label"),'default':("Catalogs")],-1)
printHtmlPart(5)
for( c in (personInstance?.catalogs) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(c?.encodeAsHTML())
})
invokeTag('link','g',112,['controller':("catalog"),'action':("show"),'id':(c.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'catalog.label', default: 'Catalog')]))
})
invokeTag('link','g',115,['controller':("catalog"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'rankings', 'error'))
printHtmlPart(15)
invokeTag('message','g',124,['code':("person.rankings.label"),'default':("Rankings")],-1)
printHtmlPart(5)
for( r in (personInstance?.rankings) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(r?.encodeAsHTML())
})
invokeTag('link','g',130,['controller':("ranking"),'action':("show"),'id':(r.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'ranking.label', default: 'Ranking')]))
})
invokeTag('link','g',133,['controller':("ranking"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'rankingItems', 'error'))
printHtmlPart(16)
invokeTag('message','g',142,['code':("person.rankingItems.label"),'default':("Ranking Items")],-1)
printHtmlPart(5)
for( r in (personInstance?.rankingItems) ) {
printHtmlPart(6)
createTagBody(2, {->
expressionOut.print(r?.encodeAsHTML())
})
invokeTag('link','g',148,['controller':("rankingItem"),'action':("show"),'id':(r.id)],2)
printHtmlPart(7)
}
printHtmlPart(8)
createTagBody(1, {->
expressionOut.print(message(code: 'default.add.label', args: [message(code: 'rankingItem.label', default: 'RankingItem')]))
})
invokeTag('link','g',151,['controller':("rankingItem"),'action':("create"),'params':(['person.id': personInstance?.id])],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: personInstance, field: 'sex', 'error'))
printHtmlPart(17)
invokeTag('message','g',160,['code':("person.sex.label"),'default':("Sex")],-1)
printHtmlPart(2)
invokeTag('select','g',163,['name':("sex"),'from':(com.oumuo.central.Person$Sex?.values()),'keys':(com.oumuo.central.Person$Sex.values()*.name()),'required':(""),'value':(personInstance?.sex?.name())],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'dateOfBirth', 'error'))
printHtmlPart(18)
invokeTag('message','g',169,['code':("person.dateOfBirth.label"),'default':("Date Of Birth")],-1)
printHtmlPart(19)
invokeTag('formatDate','g',172,['date':(personInstance?.dateOfBirth),'formatName':("dateonly.date.format")],-1)
printHtmlPart(20)
invokeTag('formatDate','g',172,['date':(personInstance?.dateOfBirth),'format':("dd")],-1)
printHtmlPart(21)
invokeTag('formatDate','g',172,['date':(personInstance?.dateOfBirth),'format':("MM")],-1)
printHtmlPart(22)
invokeTag('formatDate','g',172,['date':(personInstance?.dateOfBirth),'format':("yyyy")],-1)
printHtmlPart(23)
createClosureForHtmlPart(24, 1)
invokeTag('javascript','g',192,[:],1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'race', 'error'))
printHtmlPart(25)
invokeTag('message','g',198,['code':("person.race.label"),'default':("Race")],-1)
printHtmlPart(26)
invokeTag('select','g',201,['name':("race"),'from':(com.oumuo.lookup.Race?.values()),'keys':(com.oumuo.lookup.Race.values()*.name()),'value':(personInstance?.race?.name()),'noSelection':(['': ''])],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'status', 'error'))
printHtmlPart(27)
invokeTag('message','g',207,['code':("person.status.label"),'default':("Status")],-1)
printHtmlPart(2)
invokeTag('select','g',210,['name':("status"),'from':(com.oumuo.lookup.Status?.values()),'keys':(com.oumuo.lookup.Status.values()*.name()),'required':(""),'value':(personInstance?.status?.name())],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'preferredLanguage', 'error'))
printHtmlPart(28)
invokeTag('message','g',216,['code':("person.preferredLanguage.label"),'default':("Preferred Language")],-1)
printHtmlPart(2)
invokeTag('select','g',219,['name':("preferredLanguage"),'from':(com.oumuo.lookup.Language?.values()),'keys':(com.oumuo.lookup.Language.values()*.name()),'required':(""),'value':(personInstance?.preferredLanguage?.name())],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'userLogin', 'error'))
printHtmlPart(29)
invokeTag('message','g',225,['code':("person.userLogin.label"),'default':("User Login")],-1)
printHtmlPart(2)
invokeTag('select','g',228,['id':("userLogin"),'name':("userLogin.id"),'from':(com.oumuo.UserLogin.findAllById(personInstance?.userLogin?.id)),'optionKey':("id"),'required':(""),'value':(personInstance?.userLogin?.id),'class':("many-to-one")],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'homeEmail', 'error'))
printHtmlPart(30)
invokeTag('message','g',234,['code':("person.homeEmail.label"),'default':("Home Email")],-1)
printHtmlPart(26)
invokeTag('field','g',237,['type':("email"),'name':("homeEmail"),'value':(personInstance?.homeEmail)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'workEmail', 'error'))
printHtmlPart(31)
invokeTag('message','g',243,['code':("person.workEmail.label"),'default':("Work Email")],-1)
printHtmlPart(26)
invokeTag('field','g',246,['type':("email"),'name':("workEmail"),'value':(personInstance?.workEmail)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'homePhone', 'error'))
printHtmlPart(32)
invokeTag('message','g',252,['code':("person.homePhone.label"),'default':("Home Phone")],-1)
printHtmlPart(26)
invokeTag('textField','g',255,['name':("homePhone"),'pattern':(personInstance.constraints.homePhone.matches),'value':(personInstance?.homePhone)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'workPhone', 'error'))
printHtmlPart(33)
invokeTag('message','g',261,['code':("person.workPhone.label"),'default':("Work Phone")],-1)
printHtmlPart(26)
invokeTag('textField','g',264,['name':("workPhone"),'pattern':(personInstance.constraints.workPhone.matches),'value':(personInstance?.workPhone)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'mobilePhone', 'error'))
printHtmlPart(34)
invokeTag('message','g',270,['code':("person.mobilePhone.label"),'default':("Mobile Phone")],-1)
printHtmlPart(26)
invokeTag('textField','g',273,['name':("mobilePhone"),'pattern':(personInstance.constraints.mobilePhone.matches),'value':(personInstance?.mobilePhone)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'addressLine1', 'error'))
printHtmlPart(35)
invokeTag('message','g',279,['code':("person.addressLine1.label"),'default':("Address Line1")],-1)
printHtmlPart(26)
invokeTag('textField','g',282,['name':("addressLine1"),'value':(personInstance?.addressLine1)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'addressLine2', 'error'))
printHtmlPart(36)
invokeTag('message','g',288,['code':("person.addressLine2.label"),'default':("Address Line2")],-1)
printHtmlPart(26)
invokeTag('textField','g',291,['name':("addressLine2"),'value':(personInstance?.addressLine2)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'city', 'error'))
printHtmlPart(37)
invokeTag('message','g',297,['code':("person.city.label"),'default':("City")],-1)
printHtmlPart(26)
invokeTag('textField','g',300,['name':("city"),'value':(personInstance?.city)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'state', 'error'))
printHtmlPart(38)
invokeTag('message','g',306,['code':("person.state.label"),'default':("State")],-1)
printHtmlPart(26)
invokeTag('textField','g',309,['name':("state"),'value':(personInstance?.state)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'country', 'error'))
printHtmlPart(39)
invokeTag('message','g',315,['code':("person.country.label"),'default':("Country")],-1)
printHtmlPart(2)
invokeTag('select','g',318,['name':("country"),'from':(com.oumuo.lookup.Country?.values()),'keys':(com.oumuo.lookup.Country.values()*.name()),'required':(""),'value':(personInstance?.country?.name())],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'zip', 'error'))
printHtmlPart(40)
invokeTag('message','g',324,['code':("person.zip.label"),'default':("Zip")],-1)
printHtmlPart(26)
invokeTag('textField','g',327,['name':("zip"),'maxlength':("10"),'value':(personInstance?.zip)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'comment', 'error'))
printHtmlPart(41)
invokeTag('message','g',333,['code':("person.comment.label"),'default':("Comment")],-1)
printHtmlPart(26)
invokeTag('textArea','g',336,['name':("comment"),'cols':("40"),'rows':("5"),'maxlength':("1000"),'value':(personInstance?.comment)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: personInstance, field: 'userName', 'error'))
printHtmlPart(42)
invokeTag('message','g',342,['code':("person.userName.label"),'default':("User Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',345,['name':("userName"),'required':(""),'value':(personInstance?.userName)],-1)
printHtmlPart(43)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1433807808911L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
